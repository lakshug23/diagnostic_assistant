version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: medsage_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secure_password_change_me
      MONGO_INITDB_DATABASE: medsage_production
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - medsage_network

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: medsage_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass secure_redis_password_change_me
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - medsage_network

  # MedSAGE Application
  app:
    build: .
    container_name: medsage_app
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - MONGODB_URI=mongodb://admin:secure_password_change_me@mongodb:27017?authSource=admin
      - DATABASE_NAME=medsage_production
      - RATE_LIMIT_STORAGE_URL=redis://:secure_redis_password_change_me@redis:6379
      - SECRET_KEY=MedSAGE-Prod-2025-Secure-Key-9a8b7c6d5e4f3g2h1i0j-Medical-AI-Assistant
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - medsage_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: medsage_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./static:/usr/share/nginx/html/static:ro
    depends_on:
      - app
    networks:
      - medsage_network

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: medsage_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - medsage_network
    profiles:
      - monitoring

  # Grafana for monitoring dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: medsage_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password_change_me
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - medsage_network
    profiles:
      - monitoring

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  medsage_network:
    driver: bridge
